module Dodopayments
  module Models
    type meter_create_params =
      {
        aggregation: Dodopayments::MeterAggregation,
        event_name: String,
        measurement_unit: String,
        name: String,
        description: String?,
        filter: Dodopayments::MeterFilter?
      }
      & Dodopayments::Internal::Type::request_parameters

    class MeterCreateParams < Dodopayments::Internal::Type::BaseModel
      extend Dodopayments::Internal::Type::RequestParameters::Converter
      include Dodopayments::Internal::Type::RequestParameters

      attr_accessor aggregation: Dodopayments::MeterAggregation

      attr_accessor event_name: String

      attr_accessor measurement_unit: String

      attr_accessor name: String

      attr_accessor description: String?

      attr_accessor filter: Dodopayments::MeterFilter?

      def initialize: (
        aggregation: Dodopayments::MeterAggregation,
        event_name: String,
        measurement_unit: String,
        name: String,
        ?description: String?,
        ?filter: Dodopayments::MeterFilter?,
        ?request_options: Dodopayments::request_opts
      ) -> void

      def to_hash: -> {
        aggregation: Dodopayments::MeterAggregation,
        event_name: String,
        measurement_unit: String,
        name: String,
        description: String?,
        filter: Dodopayments::MeterFilter?,
        request_options: Dodopayments::RequestOptions
      }
    end
  end
end
