module Dodopayments
  module Models
    type webhook_event_type =
      :"payment.succeeded"
      | :"payment.failed"
      | :"payment.processing"
      | :"payment.cancelled"
      | :"refund.succeeded"
      | :"refund.failed"
      | :"dispute.opened"
      | :"dispute.expired"
      | :"dispute.accepted"
      | :"dispute.cancelled"
      | :"dispute.challenged"
      | :"dispute.won"
      | :"dispute.lost"
      | :"subscription.active"
      | :"subscription.renewed"
      | :"subscription.on_hold"
      | :"subscription.paused"
      | :"subscription.cancelled"
      | :"subscription.failed"
      | :"subscription.expired"
      | :"subscription.plan_changed"
      | :"license_key.created"

    module WebhookEventType
      extend Dodopayments::Internal::Type::Enum

      PAYMENT_SUCCEEDED: :"payment.succeeded"
      PAYMENT_FAILED: :"payment.failed"
      PAYMENT_PROCESSING: :"payment.processing"
      PAYMENT_CANCELLED: :"payment.cancelled"
      REFUND_SUCCEEDED: :"refund.succeeded"
      REFUND_FAILED: :"refund.failed"
      DISPUTE_OPENED: :"dispute.opened"
      DISPUTE_EXPIRED: :"dispute.expired"
      DISPUTE_ACCEPTED: :"dispute.accepted"
      DISPUTE_CANCELLED: :"dispute.cancelled"
      DISPUTE_CHALLENGED: :"dispute.challenged"
      DISPUTE_WON: :"dispute.won"
      DISPUTE_LOST: :"dispute.lost"
      SUBSCRIPTION_ACTIVE: :"subscription.active"
      SUBSCRIPTION_RENEWED: :"subscription.renewed"
      SUBSCRIPTION_ON_HOLD: :"subscription.on_hold"
      SUBSCRIPTION_PAUSED: :"subscription.paused"
      SUBSCRIPTION_CANCELLED: :"subscription.cancelled"
      SUBSCRIPTION_FAILED: :"subscription.failed"
      SUBSCRIPTION_EXPIRED: :"subscription.expired"
      SUBSCRIPTION_PLAN_CHANGED: :"subscription.plan_changed"
      LICENSE_KEY_CREATED: :"license_key.created"

      def self?.values: -> ::Array[Dodopayments::Models::webhook_event_type]
    end
  end
end
