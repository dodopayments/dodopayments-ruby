module Dodopayments
  module Models
    type subscription_list_response =
      {
        billing: Dodopayments::BillingAddress,
        cancel_at_next_billing_date: bool,
        created_at: Time,
        currency: Dodopayments::Models::currency,
        customer: Dodopayments::CustomerLimitedDetails,
        metadata: ::Hash[Symbol, String],
        next_billing_date: Time,
        on_demand: bool,
        payment_frequency_count: Integer,
        payment_frequency_interval: Dodopayments::Models::time_interval,
        previous_billing_date: Time,
        product_id: String,
        quantity: Integer,
        recurring_pre_tax_amount: Integer,
        status: Dodopayments::Models::subscription_status,
        subscription_id: String,
        subscription_period_count: Integer,
        subscription_period_interval: Dodopayments::Models::time_interval,
        tax_inclusive: bool,
        trial_period_days: Integer,
        cancelled_at: Time?,
        discount_cycles_remaining: Integer?,
        discount_id: String?
      }

    class SubscriptionListResponse < Dodopayments::Internal::Type::BaseModel
      attr_accessor billing: Dodopayments::BillingAddress

      attr_accessor cancel_at_next_billing_date: bool

      attr_accessor created_at: Time

      attr_accessor currency: Dodopayments::Models::currency

      attr_accessor customer: Dodopayments::CustomerLimitedDetails

      attr_accessor metadata: ::Hash[Symbol, String]

      attr_accessor next_billing_date: Time

      attr_accessor on_demand: bool

      attr_accessor payment_frequency_count: Integer

      attr_accessor payment_frequency_interval: Dodopayments::Models::time_interval

      attr_accessor previous_billing_date: Time

      attr_accessor product_id: String

      attr_accessor quantity: Integer

      attr_accessor recurring_pre_tax_amount: Integer

      attr_accessor status: Dodopayments::Models::subscription_status

      attr_accessor subscription_id: String

      attr_accessor subscription_period_count: Integer

      attr_accessor subscription_period_interval: Dodopayments::Models::time_interval

      attr_accessor tax_inclusive: bool

      attr_accessor trial_period_days: Integer

      attr_accessor cancelled_at: Time?

      attr_accessor discount_cycles_remaining: Integer?

      attr_accessor discount_id: String?

      def initialize: (
        billing: Dodopayments::BillingAddress,
        cancel_at_next_billing_date: bool,
        created_at: Time,
        currency: Dodopayments::Models::currency,
        customer: Dodopayments::CustomerLimitedDetails,
        metadata: ::Hash[Symbol, String],
        next_billing_date: Time,
        on_demand: bool,
        payment_frequency_count: Integer,
        payment_frequency_interval: Dodopayments::Models::time_interval,
        previous_billing_date: Time,
        product_id: String,
        quantity: Integer,
        recurring_pre_tax_amount: Integer,
        status: Dodopayments::Models::subscription_status,
        subscription_id: String,
        subscription_period_count: Integer,
        subscription_period_interval: Dodopayments::Models::time_interval,
        tax_inclusive: bool,
        trial_period_days: Integer,
        ?cancelled_at: Time?,
        ?discount_cycles_remaining: Integer?,
        ?discount_id: String?
      ) -> void

      def to_hash: -> {
        billing: Dodopayments::BillingAddress,
        cancel_at_next_billing_date: bool,
        created_at: Time,
        currency: Dodopayments::Models::currency,
        customer: Dodopayments::CustomerLimitedDetails,
        metadata: ::Hash[Symbol, String],
        next_billing_date: Time,
        on_demand: bool,
        payment_frequency_count: Integer,
        payment_frequency_interval: Dodopayments::Models::time_interval,
        previous_billing_date: Time,
        product_id: String,
        quantity: Integer,
        recurring_pre_tax_amount: Integer,
        status: Dodopayments::Models::subscription_status,
        subscription_id: String,
        subscription_period_count: Integer,
        subscription_period_interval: Dodopayments::Models::time_interval,
        tax_inclusive: bool,
        trial_period_days: Integer,
        cancelled_at: Time?,
        discount_cycles_remaining: Integer?,
        discount_id: String?
      }
    end
  end
end
