module Dodopayments
  module Models
    type discount =
      {
        amount: Integer,
        business_id: String,
        code: String,
        created_at: Time,
        discount_id: String,
        restricted_to: ::Array[String],
        times_used: Integer,
        type: Dodopayments::Models::discount_type,
        expires_at: Time?,
        name: String?,
        usage_limit: Integer?
      }

    class Discount < Dodopayments::Internal::Type::BaseModel
      attr_accessor amount: Integer

      attr_accessor business_id: String

      attr_accessor code: String

      attr_accessor created_at: Time

      attr_accessor discount_id: String

      attr_accessor restricted_to: ::Array[String]

      attr_accessor times_used: Integer

      attr_accessor type: Dodopayments::Models::discount_type

      attr_accessor expires_at: Time?

      attr_accessor name: String?

      attr_accessor usage_limit: Integer?

      def initialize: (
        amount: Integer,
        business_id: String,
        code: String,
        created_at: Time,
        discount_id: String,
        restricted_to: ::Array[String],
        times_used: Integer,
        type: Dodopayments::Models::discount_type,
        ?expires_at: Time?,
        ?name: String?,
        ?usage_limit: Integer?
      ) -> void

      def to_hash: -> {
        amount: Integer,
        business_id: String,
        code: String,
        created_at: Time,
        discount_id: String,
        restricted_to: ::Array[String],
        times_used: Integer,
        type: Dodopayments::Models::discount_type,
        expires_at: Time?,
        name: String?,
        usage_limit: Integer?
      }
    end
  end
end
