module Dodopayments
  module Models
    type subscription_charge_params =
      {
        product_price: Integer,
        adaptive_currency_fees_inclusive: bool?,
        customer_balance_config: Dodopayments::SubscriptionChargeParams::CustomerBalanceConfig?,
        metadata: ::Hash[Symbol, String]?,
        product_currency: Dodopayments::Models::currency?,
        product_description: String?
      }
      & Dodopayments::Internal::Type::request_parameters

    class SubscriptionChargeParams < Dodopayments::Internal::Type::BaseModel
      extend Dodopayments::Internal::Type::RequestParameters::Converter
      include Dodopayments::Internal::Type::RequestParameters

      attr_accessor product_price: Integer

      attr_accessor adaptive_currency_fees_inclusive: bool?

      attr_accessor customer_balance_config: Dodopayments::SubscriptionChargeParams::CustomerBalanceConfig?

      attr_accessor metadata: ::Hash[Symbol, String]?

      attr_accessor product_currency: Dodopayments::Models::currency?

      attr_accessor product_description: String?

      def initialize: (
        product_price: Integer,
        ?adaptive_currency_fees_inclusive: bool?,
        ?customer_balance_config: Dodopayments::SubscriptionChargeParams::CustomerBalanceConfig?,
        ?metadata: ::Hash[Symbol, String]?,
        ?product_currency: Dodopayments::Models::currency?,
        ?product_description: String?,
        ?request_options: Dodopayments::request_opts
      ) -> void

      def to_hash: -> {
        product_price: Integer,
        adaptive_currency_fees_inclusive: bool?,
        customer_balance_config: Dodopayments::SubscriptionChargeParams::CustomerBalanceConfig?,
        metadata: ::Hash[Symbol, String]?,
        product_currency: Dodopayments::Models::currency?,
        product_description: String?,
        request_options: Dodopayments::RequestOptions
      }

      type customer_balance_config =
        {
          allow_customer_credits_purchase: bool?,
          allow_customer_credits_usage: bool?
        }

      class CustomerBalanceConfig < Dodopayments::Internal::Type::BaseModel
        attr_accessor allow_customer_credits_purchase: bool?

        attr_accessor allow_customer_credits_usage: bool?

        def initialize: (
          ?allow_customer_credits_purchase: bool?,
          ?allow_customer_credits_usage: bool?
        ) -> void

        def to_hash: -> {
          allow_customer_credits_purchase: bool?,
          allow_customer_credits_usage: bool?
        }
      end
    end
  end
end
