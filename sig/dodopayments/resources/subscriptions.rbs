module Dodopayments
  module Resources
    class Subscriptions
      def create: (
        billing: Dodopayments::BillingAddress,
        customer: Dodopayments::Models::customer_request,
        product_id: String,
        quantity: Integer,
        ?addons: ::Array[Dodopayments::SubscriptionCreateParams::Addon]?,
        ?allowed_payment_method_types: ::Array[Dodopayments::Models::SubscriptionCreateParams::allowed_payment_method_type]?,
        ?billing_currency: Dodopayments::Models::currency?,
        ?discount_code: String?,
        ?metadata: ::Hash[Symbol, String],
        ?on_demand: Dodopayments::SubscriptionCreateParams::OnDemand?,
        ?payment_link: bool?,
        ?return_url: String?,
        ?show_saved_payment_methods: bool,
        ?tax_id: String?,
        ?trial_period_days: Integer?,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Models::SubscriptionCreateResponse

      def retrieve: (
        String subscription_id,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Subscription

      def update: (
        String subscription_id,
        ?billing: Dodopayments::BillingAddress?,
        ?disable_on_demand: Dodopayments::SubscriptionUpdateParams::DisableOnDemand?,
        ?metadata: ::Hash[Symbol, String]?,
        ?status: Dodopayments::Models::subscription_status?,
        ?tax_id: String?,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Subscription

      def list: (
        ?brand_id: String?,
        ?created_at_gte: Time?,
        ?created_at_lte: Time?,
        ?customer_id: String?,
        ?page_number: Integer?,
        ?page_size: Integer?,
        ?status: Dodopayments::Models::subscription_status?,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Internal::DefaultPageNumberPagination[Dodopayments::Models::SubscriptionListResponse]

      def change_plan: (
        String subscription_id,
        ?request_options: Dodopayments::request_opts
      ) -> nil

      def charge: (
        String subscription_id,
        product_price: Integer,
        ?metadata: ::Hash[Symbol, String]?,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Models::SubscriptionChargeResponse

      def initialize: (client: Dodopayments::Client) -> void
    end
  end
end
