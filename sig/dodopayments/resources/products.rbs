module Dodopayments
  module Resources
    class Products
      attr_reader images: Dodopayments::Resources::Products::Images

      def create: (
        price: Dodopayments::Models::price,
        tax_category: Dodopayments::Models::tax_category,
        ?addons: ::Array[String]?,
        ?brand_id: String?,
        ?description: String?,
        ?digital_product_delivery: Dodopayments::ProductCreateParams::DigitalProductDelivery?,
        ?license_key_activation_message: String?,
        ?license_key_activations_limit: Integer?,
        ?license_key_duration: Dodopayments::LicenseKeyDuration?,
        ?license_key_enabled: bool?,
        ?metadata: ::Hash[Symbol, String],
        ?name: String?,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Product

      def retrieve: (
        String id,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Product

      def update: (
        String id,
        ?addons: ::Array[String]?,
        ?brand_id: String?,
        ?description: String?,
        ?digital_product_delivery: Dodopayments::ProductUpdateParams::DigitalProductDelivery?,
        ?image_id: String?,
        ?license_key_activation_message: String?,
        ?license_key_activations_limit: Integer?,
        ?license_key_duration: Dodopayments::LicenseKeyDuration?,
        ?license_key_enabled: bool?,
        ?metadata: ::Hash[Symbol, String]?,
        ?name: String?,
        ?price: Dodopayments::Models::price?,
        ?tax_category: Dodopayments::Models::tax_category?,
        ?request_options: Dodopayments::request_opts
      ) -> nil

      def list: (
        ?archived: bool,
        ?brand_id: String,
        ?page_number: Integer,
        ?page_size: Integer,
        ?recurring: bool,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Internal::DefaultPageNumberPagination[Dodopayments::Models::ProductListResponse]

      def delete: (
        String id,
        ?request_options: Dodopayments::request_opts
      ) -> nil

      def unarchive: (
        String id,
        ?request_options: Dodopayments::request_opts
      ) -> nil

      def update_files: (
        String id,
        file_name: String,
        ?request_options: Dodopayments::request_opts
      ) -> Dodopayments::Models::ProductUpdateFilesResponse

      def initialize: (client: Dodopayments::Client) -> void
    end
  end
end
