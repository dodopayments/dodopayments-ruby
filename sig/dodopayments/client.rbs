module Dodopayments
  class Client < Dodopayments::Internal::Transport::BaseClient
    DEFAULT_MAX_RETRIES: 2

    DEFAULT_TIMEOUT_IN_SECONDS: Float

    DEFAULT_INITIAL_RETRY_DELAY: Float

    DEFAULT_MAX_RETRY_DELAY: Float

    ENVIRONMENTS: {
      live_mode: "https://live.dodopayments.com",
      test_mode: "https://test.dodopayments.com"
    }

    attr_reader bearer_token: String

    attr_reader checkout_sessions: Dodopayments::Resources::CheckoutSessions

    attr_reader payments: Dodopayments::Resources::Payments

    attr_reader subscriptions: Dodopayments::Resources::Subscriptions

    attr_reader invoices: Dodopayments::Resources::Invoices

    attr_reader licenses: Dodopayments::Resources::Licenses

    attr_reader license_keys: Dodopayments::Resources::LicenseKeys

    attr_reader license_key_instances: Dodopayments::Resources::LicenseKeyInstances

    attr_reader customers: Dodopayments::Resources::Customers

    attr_reader refunds: Dodopayments::Resources::Refunds

    attr_reader disputes: Dodopayments::Resources::Disputes

    attr_reader payouts: Dodopayments::Resources::Payouts

    attr_reader webhook_events: Dodopayments::Resources::WebhookEvents

    attr_reader products: Dodopayments::Resources::Products

    attr_reader misc: Dodopayments::Resources::Misc

    attr_reader discounts: Dodopayments::Resources::Discounts

    attr_reader addons: Dodopayments::Resources::Addons

    attr_reader brands: Dodopayments::Resources::Brands

    attr_reader webhooks: Dodopayments::Resources::Webhooks

    private def auth_headers: -> ::Hash[String, String]

    def initialize: (
      ?bearer_token: String?,
      ?environment: :live_mode | :test_mode | nil,
      ?base_url: String?,
      ?max_retries: Integer,
      ?timeout: Float,
      ?initial_retry_delay: Float,
      ?max_retry_delay: Float
    ) -> void
  end
end
